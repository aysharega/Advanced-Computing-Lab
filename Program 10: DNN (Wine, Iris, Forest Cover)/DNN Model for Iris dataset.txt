#dataset
from sklearn.datasets import load_iris
bc = load_iris()
x= bc.data
y= bc.target
from sklearn.model_selection import train_test_split
x_train, x_test, y_train, y_test =train_test_split(x,y,train_size= 0.2,random_state=42)

#DNN Model
from tensorflow import keras
DNN=keras.models.Sequential()

#hidden layers
DNN.add(keras.layers.Dense(units=12, activation ='relu', 
input_shape=x_train.shape[1:]))
DNN.add(keras.layers.Dense(units=10, activation ='relu'))
DNN.add(keras.layers.Dense(units=8, activation ='relu'))
DNN.add(keras.layers.Dropout(0.25))

DNN.add(keras.layers.Dense(units=6, activation ='relu'))
DNN.add(keras.layers.Dense(units=3, activation ='sigmoid'))
DNN.summary()

#3. Compile and test
DNN.compile(loss="sparse_categorical_crossentropy", 
            optimizer="adam", metrics="accuracy")
DNN.fit(x_train,y_train, epochs=2, batch_size=16)